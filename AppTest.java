/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Poker;


import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

class AppTest {
    @Test
    void creatTest(){
        /**
         * 测试创建待办事项列表
         */
        TodoList todoList = new TodoList();
        Assertions.assertTrue(todoList.isEmpty());
    }

    @Test
    void addTest(){
        /**
         * 测试添加待办事项进入待办事项列表
         */
        String title = "牙医有约";
        String body = "下周六下午3：30，急性牙髓炎";
        TodoList todolist = new TodoList();
        todolist.add(title, body);
        Assertions.assertFalse(todolist.isEmpty());
        //将会打印出整个待办事项列表里的内容，包括每个待办事项的title,body和是否完成的标志
        System.out.println(todolist);
    }

    @Test
    void addTest2(){
        /**
         * 测试添加两个待办事项进入待办事项列表中
         * 此时待办事项列表大小为2
         */
        String title1 = "牙医有约";
        String body1 = "下周六下午3：30，四医大";
        String title2 = "晚饭后倒垃圾";
        String body2 = "晚饭后倒垃圾";
        TodoList todolist = new TodoList();
        todolist.add(title1, body1);
        todolist.add(title2, body2);
        Assertions.assertTrue(todolist.size() == 2);
    }

    @Test
    void getTest(){
        /**
         * 测试待办事项列表的get方法，输入待办事项的序号，返回一个Todo实例
         */
        String title1 = "牙医有约";
        String body1 = "下周六下午3：30，四医大";
        String title2 = "晚饭后倒垃圾";
        String body2 = "晚饭后倒垃圾";
        TodoList todolist = new TodoList();
        todolist.add(title1, body1);
        todolist.add(title2, body2);
        Assertions.assertTrue(todolist.get(2) instanceof Todo);
        //此时将打印第二个待办事项的title和body和是否完成的标志
        System.out.println(todolist.get(2));
    }

    @Test
    void getTest2(){
        /**
         * 测试待办事项列表的get方法，输入待办事项的标题，返回一个Todo实例
         */
        String title1 = "牙医有约";
        String body1 = "下周六下午3：30，四医大";
        String title2 = "晚饭后倒垃圾";
        String body2 = "晚饭后倒垃圾";
        TodoList todolist = new TodoList();
        todolist.add(title1, body1);
        todolist.add(title2, body2);
        Assertions.assertTrue(todolist.get("牙医有约") instanceof Todo);
    }

    @Test
    void contentTest(){
        /**
         * 测试代办事项的content方法
         */
        String title1 = "牙医有约";
        String body1 = "下周六下午3：30，四医大";
        String title2 = "晚饭后倒垃圾";
        String body2 = "晚饭后倒垃圾";
        TodoList todolist = new TodoList();
        todolist.add(title1, body1);
        todolist.add(title2, body2);
        Assertions.assertEquals("下周六下午3：30，四医大", todolist.get("牙医有约").content());
        //此时将会打印出"下周六下午3：30，四医大"
        System.out.println(todolist.get("牙医有约").content());
    }

    @Test
    void isDoneTest(){
        /**
         * 测试待办事项列表的isDone方法
         * 返回布尔类型标识是否完成
         */
        String title1 = "牙医有约";
        String body1 = "下周六下午3：30，四医大";
        String title2 = "晚饭后倒垃圾";
        String body2 = "晚饭后倒垃圾";
        TodoList todolist = new TodoList();
        todolist.add(title1, body1);
        todolist.add(title2, body2);
        Assertions.assertTrue(todolist.get("牙医有约").isDone == false);
    }

    @Test
    void setIsDoneTest(){
        /**
         * 测试标记待办事项为已完成
         */
        String title1 = "牙医有约";
        String body1 = "下周六下午3：30，四医大";
        String title2 = "晚饭后倒垃圾";
        String body2 = "晚饭后倒垃圾";
        TodoList todolist = new TodoList();
        todolist.add(title1, body1);
        todolist.add(title2, body2);
        todolist.get("牙医有约").setIsDone();
        Assertions.assertTrue(todolist.get("牙医有约").isDone == true);
    }

    @Test
    void deleteTest(){
        /**
         * 测试待办事项列表的删除功能
         */
        String title1 = "牙医有约";
        String body1 = "下周六下午3：30，四医大";
        String title2 = "晚饭后倒垃圾";
        String body2 = "晚饭后倒垃圾";
        TodoList todolist = new TodoList();
        todolist.add(title1, body1);
        todolist.add(title2, body2);
        //删除第一条待办事项
        todolist.delete(1);
        Assertions.assertTrue(todolist.size() == 1);
        //此时打印出只有晚饭后倒垃圾的信息
        todolist.list();
    }
}
